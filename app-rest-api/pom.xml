<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath/>
    </parent>

    <groupId>com.pduleba</groupId>
    <artifactId>app-rest-api</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>app-rest-api</name>
    <description>App Rest API</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>

        <!-- Project dependencies versions -->
        <aws.java.bom.version>1.11.327</aws.java.bom.version>
        <mapstruct.version>1.3.0.Final</mapstruct.version>

        <!-- Plugins versions -->
        <github-release-plugin.version>1.3.0</github-release-plugin.version>
        <jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-bom</artifactId>
                <version>${aws.java.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Main -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
        </dependency>

        <!-- Web application layer -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- Freemarker template support -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <!-- RESTful layer -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <!-- JPA/Hibernate layer -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- HATEOAS support -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <!-- WebServer support -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <finalName>${project.artifactId}</finalName>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- https://github.com/jutzig/github-release-plugin -->
            <plugin>
                <groupId>de.jutzig</groupId>
                <artifactId>github-release-plugin</artifactId>
                <version>${github-release-plugin.version}</version>
                <executions>
                    <execution>
                        <id>github-upload</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>release</goal>
                        </goals>
                        <inherited>false</inherited>
                    </execution>
                </executions>
                <configuration>
                    <description>Release of ${project.version}</description>
                    <releaseName>${project.version}</releaseName>
                    <tag>${project.version}</tag>

                    <!-- If your project has additional artifacts, such as ones produced by
                         the maven-assembly-plugin, you can define the following
                         (requires version 1.1.1 of the plugin or higher): -->
                    <fileSets>
                        <fileSet>
                            <directory>${project.build.directory}</directory>
                            <includes>
                                <include>${project.artifactId}*.jar</include>
                                <include>${project.artifactId}*.zip</include>
                            </includes>
                        </fileSet>
                    </fileSets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <!-- Intentionally skip artifact deployment as there is no repo available -->
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/application.js</include>
                    <include>**/application.yml</include>
                    <include>**/aws.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/application.js</exclude>
                    <exclude>**/application.yml</exclude>
                    <exclude>**/aws.yml</exclude>
                </excludes>
            </resource>
        </resources>
    </build>

    <profiles>
        <!-- https://docs.spring.io/spring-boot/docs/current/reference/html/howto-properties-and-configuration.html -->
        <profile>
            <id>local</id>
            <properties>
                <app-rest.aws.profile>local</app-rest.aws.profile>
                <app-rest.spring.profile>local</app-rest.spring.profile>
                <app-rest.api.url>http://localhost:8080/app-rest/api</app-rest.api.url>
                <app-rest.datasource.url>jdbc:mysql://localhost:3306/app-db</app-rest.datasource.url>
                <app-rest.datasource.user>user</app-rest.datasource.user>
                <app-rest.datasource.pass>user</app-rest.datasource.pass>
            </properties>
        </profile>

        <profile>
            <id>aws</id>
            <properties>
                <app-rest.aws.profile>aws</app-rest.aws.profile>
                <app-rest.spring.profile>aws</app-rest.spring.profile>
                <app-rest.api.url>http://localhost:8080/app-rest/api</app-rest.api.url>
                <app-rest.datasource.url>jdbc:mysql://localhost:3306/app-db</app-rest.datasource.url>
                <app-rest.datasource.user>user</app-rest.datasource.user>
                <app-rest.datasource.pass>user</app-rest.datasource.pass>
            </properties>
        </profile>
    </profiles>

    <scm>
        <connection>scm:git:https://github.com/pduleba/DevOps-SL.git</connection>
        <developerConnection>scm:git:https://github.com/pduleba/DevOps-SL.git</developerConnection>
        <url>https://github.com/pduleba/DevOps-SL/${project.scm.tag}</url>
        <tag>master</tag>
    </scm>

</project>
